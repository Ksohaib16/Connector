// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String              @id 
  username      String
  email         String              @unique
  avatarUrl     String?
  conversations ConversationMember[]
  sentMessages  Message[]           
  status        UserStatus          @default(OFFLINE)
  lastSeen      DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}

model Conversation {
  id            String              @id @default(nanoid())
  members       ConversationMember[]
  messages      Message[]
 lastMessageContent String?
 lastMessageSenderId String?
 lastMessageTime DateTime?
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

 @@index([updatedAt, id])
 @@index([lastMessageTime])
}

model Message {
  id            String              @id @default(cuid())
  content       String
  type          MessageType         @default(TEXT)
  status        MessageStatus       @default(SENT)
  senderId      String
  sender        User                @relation(fields: [senderId], references: [id])
  conversationId String
  conversation  Conversation        @relation(fields: [conversationId], references: [id])
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt

  @@index([senderId])
  @@index([conversationId])
}

model ConversationMember {
  id            String       @id @default(nanoid())
  userId        String
  // This connects to the User
  user          User         @relation(fields: [userId], references: [id])
  conversationId String
  // This connects to the Conversation
  conversation  Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
  @@index([userId])
  @@index([conversationId])
}

enum UserStatus {
  ONLINE
  OFFLINE
}

enum MessageType {
  TEXT
  MEDIA
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}